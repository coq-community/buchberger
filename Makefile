##############################################################################
##                 The Calculus of Inductive Constructions                  ##
##                                                                          ##
##                                Projet Coq                                ##
##                                                                          ##
##                     INRIA                        ENS-CNRS                ##
##              Rocquencourt                        Lyon                    ##
##                                                                          ##
##                                  Coq V7                                  ##
##                                                                          ##
##                                                                          ##
##############################################################################

# WARNING
#
# This Makefile has been automagically generated by coq_makefile
# Edit at your own risks !
#
# END OF WARNING

#
# This Makefile was generated by the command line :
# coq_makefile -f Make -o Makefile 
#

##########################
#                        #
# Variables definitions. #
#                        #
##########################

CAMLP4LIB=`camlp4 -where`
COQSRC=-I $(COQTOP)/kernel -I $(COQTOP)/lib \
  -I $(COQTOP)/library -I $(COQTOP)/parsing \
  -I $(COQTOP)/pretyping -I $(COQTOP)/interp \
  -I $(COQTOP)/proofs -I $(COQTOP)/syntax -I $(COQTOP)/tactics \
  -I $(COQTOP)/toplevel -I $(COQTOP)/contrib/correctness \
  -I $(COQTOP)/contrib/extraction -I $(COQTOP)/contrib/field \
  -I $(COQTOP)/contrib/fourier -I $(COQTOP)/contrib/graphs \
  -I $(COQTOP)/contrib/interface -I $(COQTOP)/contrib/jprover \
  -I $(COQTOP)/contrib/omega -I $(COQTOP)/contrib/romega \
  -I $(COQTOP)/contrib/ring -I $(COQTOP)/contrib/xml \
  -I $(CAMLP4LIB)
ZFLAGS=$(OCAMLLIBS) $(COQSRC)
OPT=
COQFLAGS=-q $(OPT) $(COQLIBS) $(COQ_XML)
COQC=$(COQBIN)coqc
GALLINA=gallina
COQDOC=coqdoc
CAMLC=ocamlc -c
CAMLOPTC=ocamlopt -c
CAMLLINK=ocamlc
CAMLOPTLINK=ocamlopt
COQDEP=$(COQBIN)coqdep -c
COQVO2XML=coq_vo2xml
GRAMMARS=grammar.cma
CAMLP4EXTEND=pa_extend.cmo pa_ifdef.cmo q_MLast.cmo
PP=-pp "camlp4o -I . -I $(COQTOP)/parsing $(CAMLP4EXTEND) $(GRAMMARS) -impl"

#########################
#                       #
# Libraries definition. #
#                       #
#########################

OCAMLLIBS=-I .
COQLIBS=-I .

###################################
#                                 #
# Definition of the "all" target. #
#                                 #
###################################

VFILES=Bar.v\
  BuchAux.v\
  BuchRed.v\
  Buch.v\
  CoefStructure.v\
  Dickson.v\
  DivTerm.v\
  Extract.v\
  Fred.v\
  LetP.v\
  LexiOrder.v\
  ListProps.v\
  Monomials.v\
  moreCoefStructure.v\
  OpenIndGoodRel.v\
  OrderStructure.v\
  Pcomb.v\
  Pcrit.v\
  Peq.v\
  Pminus.v\
  Pmults.v\
  Pmult.v\
  POrder.v\
  Pplus.v\
  Preduceplus.v\
  Preducestar.v\
  Preducestar.v\
  Preduce.v\
  Pspminus.v\
  Pspoly.v\
  Term.v\
  WfR0.v
VOFILES=$(VFILES:.v=.vo)
VIFILES=$(VFILES:.v=.vi)
GFILES=$(VFILES:.v=.g)
HTMLFILES=$(VFILES:.v=.html)
GHTMLFILES=$(VFILES:.v=.g.html)

all: Bar.vo\
  BuchAux.vo\
  BuchRed.vo\
  Buch.vo\
  CoefStructure.vo\
  Dickson.vo\
  DivTerm.vo\
  Extract.vo\
  Fred.vo\
  LetP.vo\
  LexiOrder.vo\
  ListProps.vo\
  Monomials.vo\
  moreCoefStructure.vo\
  OpenIndGoodRel.vo\
  OrderStructure.vo\
  Pcomb.vo\
  Pcrit.vo\
  Peq.vo\
  Pminus.vo\
  Pmults.vo\
  Pmult.vo\
  POrder.vo\
  Pplus.vo\
  Preduceplus.vo\
  Preducestar.vo\
  Preducestar.vo\
  Preduce.vo\
  Pspminus.vo\
  Pspoly.vo\
  Term.vo\
  WfR0.vo

spec: $(VIFILES)

gallina: $(GFILES)

html: $(HTMLFILES)

gallinahtml: $(GHTMLFILES)

all.ps: $(VFILES)
	$(COQDOC) -ps -o $@ `$(COQDEP) -sort -suffix .v $(VFILES)`

all-gal.ps: $(VFILES)
	$(COQDOC) -ps -g -o $@ `$(COQDEP) -sort -suffix .v $(VFILES)`

xml:: .xml_time_stamp
.xml_time_stamp: Bar.vo\
  BuchAux.vo\
  BuchRed.vo\
  Buch.vo\
  CoefStructure.vo\
  Dickson.vo\
  DivTerm.vo\
  Extract.vo\
  Fred.vo\
  LetP.vo\
  LexiOrder.vo\
  ListProps.vo\
  Monomials.vo\
  moreCoefStructure.vo\
  OpenIndGoodRel.vo\
  OrderStructure.vo\
  Pcomb.vo\
  Pcrit.vo\
  Peq.vo\
  Pminus.vo\
  Pmults.vo\
  Pmult.vo\
  POrder.vo\
  Pplus.vo\
  Preduceplus.vo\
  Preducestar.vo\
  Preducestar.vo\
  Preduce.vo\
  Pspminus.vo\
  Pspoly.vo\
  Term.vo\
  WfR0.vo
	$(COQVO2XML) $(COQFLAGS) $(?:%.o=%)
	touch .xml_time_stamp

####################
#                  #
# Special targets. #
#                  #
####################

.PHONY: all opt byte archclean clean install depend xml

.SUFFIXES: .v .vo .vi .g .html .tex .g.tex .g.html

.v.vo:
	$(COQC) $(COQDEBUG) $(COQFLAGS) $*

.v.vi:
	$(COQC) -i $(COQDEBUG) $(COQFLAGS) $*

.v.g:
	$(GALLINA) $<

.v.tex:
	$(COQDOC) -latex $< -o $@

.v.html:
	$(COQDOC) -html $< -o $@

.v.g.tex:
	$(COQDOC) -latex -g $< -o $@

.v.g.html:
	$(COQDOC) -html -g $< -o $@

byte:
	$(MAKE) all "OPT="

opt:
	$(MAKE) all "OPT=-opt"

include .depend

depend:
	rm .depend
	$(COQDEP) -i $(COQLIBS) *.v *.ml *.mli >.depend
	$(COQDEP) $(COQLIBS) -suffix .html *.v >>.depend

xml::

install:
	mkdir -p `$(COQC) -where`/user-contrib
	cp -f *.vo `$(COQC) -where`/user-contrib

Makefile: Make
	mv -f Makefile Makefile.bak
	$(COQBIN)coq_makefile -f Make -o Makefile

clean:
	rm -f *.cmo *.cmi *.cmx *.o *.vo *.vi *.g *~
	rm -f all.ps all-gal.ps $(HTMLFILES) $(GHTMLFILES)

archclean:
	rm -f *.cmx *.o

# WARNING
#
# This Makefile has been automagically generated by coq_makefile
# Edit at your own risks !
#
# END OF WARNING

